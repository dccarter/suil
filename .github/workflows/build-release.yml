name: Development Build

on:
  push:
    branches:
      - main
env:
  VERSION: 0.1.0

jobs:
  build:
    runs-on: ubuntu-latest
    container: suilteam/base:alpine
    strategy:
      matrix:
        type: [Debug, Release]

    steps:
      - uses: actions/checkout@v2
      # Create a build directory
      - name: Create Build Environment
        run: cmake -E make_directory build-${{ matrix.type }}

      # Configure CMake project
      - name: Configure CMake
        shell: bash
        run: |
          cd build-${{ matrix.type }}
          cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{ matrix.type }} \
                                  -DCMAKE_INSTALL_PREFIX=artifacts/${{ matrix.type }} \
                                  -DSUIL_VERSION=$VERSION

      # Build project dependencies
      - name: Build Dependecies
        shell: bash
        run: |
          cd ${{runner.workspace}}/build-${{ matrix.type }}
          make catch -j4

      # Build project
      - name: Build
        shell: bash
        run: |
          cd build-${{ matrix.type }}
          make -j4 install

      - name: UnitTests
        shell: bash
        run: |
          cd build-${{ matrix.type }}
          ./libs/base/base_unittest -r junit -o base_unittest.xml
          ./libs/network/net_unittest -r junit -o net_unittest.xml
          ./libs/database/db_unittest -r junit -o db_unittest.xml
          ./libs/rpc/rpc_unittest -r junit -o rpc_unittest.xml
          ./libs/http/httpserver_unittest -r junit -o httpserver_unittest.xml
          ./libs/http/httpclient_unittest -r junit -o httpclient_unittest.xml

      - name: Create build artifact
        shell: bash
        run: |
          cd build-${{ matrix.type }}
          make package

      - name: Save build artifact
        uses: actions/upload-artifact@v2
        with:
          name: Suil-${{ matrix.type }}
          path: build-${{ matrix.type }}/Suil-${{env.VERSION}}-${{ matrix.type }}.tar.gz


  release0:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          body: |
            Changes in this Release
            - Initial release
          draft: false
          prerelease: false
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

  release:
    runs-on: ubuntu-latest
    needs: release0
    strategy:
      matrix:
        type: [ Debug, Release ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: Suil-${{ matrix.type }}
          path: artifacts

      - name: Upload Release Artifacts
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release0.outputs.upload_url }}
          assert_path: artifacts/Suil-${{env.VERSION}}-${{ matrix.type }}.tar.gz
          assert_name: Suil-$VERSION-${{ matrix.type }}
          asset_content_type: application/zip
